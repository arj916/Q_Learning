from re import X
import random

class state():
    def __init__(self,x,y):
        self.x = X
        self.y = y

    def __init__(self):
        self.x = 0
        self.y = 0
    
    def perp_dir(self, act):
        if act == 'left' or act == 'right':
            return ['up','down']
        else:
            return ['right', 'left']

    def agent_slip(self, rand_num, act):
        perp = self.perp.dir(act)
        if rand_num <= 8:
            return act
        elif rand_num < 9:
            return perp[0]
        else:
            return perp[1]

    def update(self,act, rand):
        real_action = self.agent_slip(rand, act)
        if real_action == "right":
            if self.x < 10:
                self.x = self.x + 1
        elif real_action == "left":
            if self.x > 0:
                self.x = self.x - 1
        elif real_action == "down":
            if self.y > 0:
                self.y = self.y - 1
        elif real_action == "up":
            if self.y < 10:
                self.y = self.y + 1
    def reward(self):
        if self.x == 10 and self.y == 10:
            return 1
        else:
            return 0

        
    def toString(self):
        return "("+ str(self.x)+","+ str(self.y)+")"
    
    
    def simulate(s, act):
        rand = int.random[1:10]
        s.update(act, rand)
        rew = s.reward()
        t = tuple(s.toString(),rew)
        return t

class agent():

    def __init__(self, current_state, f_state):
        self.current_state = current_state
        self.f_state = f_state
    
    def manual_policy(self):
        pass

    def random_policy(self):
        rand = random.randint[1:4]
        if rand == 1:
            return "right"
        elif rand == 2:
            return 'left'
        elif rand == 3:
            return 'up'
        else:
            return 'down'



